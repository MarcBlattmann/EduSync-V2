/* Notes page specific styles */

/* Editor styles */
.note-editor {
  min-height: 300px;
  word-break: break-word;
  line-height: 1.5;
  border-radius: 0.5rem;
  overflow: hidden;
}

/* Line break handling for editor and viewer */
.note-editor .ProseMirror,
.note-viewer {
  white-space: pre-wrap;
}

.note-editor .ProseMirror br,
.note-viewer br {
  display: block;
  margin: 0;
  line-height: 1.5;
}

/* Ensure paragraphs maintain minimal spacing to mimic line breaks */
.note-editor .ProseMirror p,
.note-viewer p {
  margin: 0 0 0.5em 0;
  line-height: 1.5;
}

.note-editor .ProseMirror p:last-child,
.note-viewer p:last-child {
  margin-bottom: 0;
}

/* Handle empty paragraphs */
.note-editor .ProseMirror p:empty,
.note-viewer p:empty {
  margin: 0;
  line-height: 1.5;
  min-height: 1.5em;
}

/* Remove outline from input fields, buttons, and interactive elements */
.note-editor *, 
.notes-container *, 
[class*="dialog"] *, 
.Dialog *,
.DialogContent *,
.MobileSidebar *,
input, 
textarea, 
button, 
select, 
[contenteditable] {
  outline: none !important;
  box-shadow: none !important;
}

/* Direct target for all elements within the notes app */
.DialogContent input, 
.DialogContent button,
.AlertDialogContent input, 
.AlertDialogContent button,
.notes-container input,
.notes-container button,
[cmdk-root] * {
  outline: none !important;
  box-shadow: none !important;
  --tw-ring-offset-width: 0px !important;
  --tw-ring-offset-color: transparent !important;
  --tw-ring-color: transparent !important;
}

/* Global focus removal - extreme specificity */
[id]:focus,
[class]:focus,
[type]:focus,
button:focus,
a:focus,
textarea:focus,
select:focus,
[contenteditable]:focus {
  outline: none !important;
  box-shadow: none !important;
  border-color: hsl(var(--border)) !important;
}

/* Complete override for focus states */
*:focus,
*:focus-visible,
*:focus-within {
  outline: none !important;
  box-shadow: none !important;
  outline-color: transparent !important;
  outline-width: 0 !important;
  outline-style: none !important;
}

/* Specific input focus overrides */
input:focus,
.ProseMirror:focus,
.ProseMirror:focus-visible {
  outline: none !important;
  border-color: hsl(var(--border)) !important;
  box-shadow: none !important;
}

/* Override shadcn focus styles */
.ring-offset-background:focus-visible {
  --tw-ring-offset-width: 0 !important;
  --tw-ring-width: 0 !important;
}

/* Folder tree styling */
.folder-with-content {
  font-weight: 500;
  color: hsl(var(--foreground));
}

.folder-empty {
  font-weight: normal;
  font-style: italic;
  opacity: 0.8;
  color: hsl(var(--muted-foreground));
}

.folder-tree-item {
  transition: background-color 0.2s ease;
  border-radius: 0.375rem;
}

.folder-tree-item:hover {
  background-color: hsl(var(--accent) / 0.5);
}

.folder-tree-item.active {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.folder-toggle {
  transition: transform 0.2s ease;
}

/* Using ChevronDown/ChevronRight icons for folder state */

/* Folder indentation styling for better hierarchy visibility */
.ml-4 {
  position: relative;
  padding-left: 0.25rem;
}

.ml-4::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 1px;
  background-color: hsl(var(--border) / 0.5);
  height: 100%;
}

/* Note item styling */
.note-item {
  transition: all 0.2s ease;
  border: 1px solid transparent;
}

.note-item:hover {
  border-color: hsl(var(--accent));
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.note-item.active {
  border-color: hsl(var(--primary));
  background-color: hsl(var(--primary) / 0.05);
}

/* TipTap editor styling */
.ProseMirror {
  outline: none !important;
  padding: 1rem;
  min-height: 200px;
  word-break: break-word;
  width: 100%;
  height: 100%;
  border: none !important;
  box-shadow: none !important;
}

.ProseMirror:focus,
.ProseMirror:focus-visible,
.ProseMirror * {
  outline: none !important;
  border-color: transparent !important;
  box-shadow: none !important;
  outline-style: none !important;
}

.editor-toolbar {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
  padding: 0.5rem;
  border-bottom: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  position: sticky;
  top: 0;
  z-index: 10;
}

.toolbar-button {
  width: 2rem;
  height: 2rem;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.25rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: hsl(var(--foreground));
}

.toolbar-button:hover {
  background-color: hsl(var(--accent) / 0.8);
  color: hsl(var(--accent-foreground));
}

.toolbar-button.active {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.toolbar-divider {
  width: 1px;
  height: 1.5rem;
  background-color: hsl(var(--border));
  margin: 0 0.25rem;
}

/* Mobile styles */
@media (max-width: 640px) {
  .ProseMirror {
    padding: 0.75rem;
    min-height: 150px;
    font-size: 16px !important; /* Prevent zoom on iOS */
  }
  
  .mobile-editor-content {
    /* Prevent iOS zoom on input focus */
    font-size: 16px;
  }
  
  .toolbar-button {
    width: 1.75rem;
    height: 1.75rem;
  }
  
  .editor-toolbar {
    padding: 0.375rem;
    gap: 0.125rem;
    overflow-x: auto;
    scrollbar-width: none;  /* Firefox */
    -ms-overflow-style: none;  /* IE and Edge */
  }
  
  .editor-toolbar::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera */
  }
  
  .folder-with-content, 
  .folder-empty {
    max-width: 150px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

/* TipTap content styling */
.ProseMirror p {
  margin-bottom: 0.75rem;
}

.ProseMirror h1 {
  font-size: 1.75rem;
  font-weight: 700;
  margin-bottom: 1rem;
  margin-top: 1.25rem;
}

.ProseMirror h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
  margin-top: 1rem;
}

.ProseMirror h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  margin-top: 0.75rem;
}

.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5rem;
  margin-bottom: 0.75rem;
}

.ProseMirror ul {
  list-style-type: disc;
}

.ProseMirror ol {
  list-style-type: decimal;
}

.ProseMirror code {
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: 0.25rem;
  padding: 0.1rem 0.25rem;
  font-family: monospace;
  font-size: 0.9em;
}

.ProseMirror a {
  color: hsl(var(--primary));
  text-decoration: underline;
}

/* Table styles */
.ProseMirror table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  margin: 1rem 0;
  overflow: hidden;
}

.ProseMirror td,
.ProseMirror th {
  border: 1px solid hsl(var(--border));
  padding: 0.5rem;
  vertical-align: top;
  position: relative;
}

.ProseMirror th {
  background-color: hsl(var(--muted));
  font-weight: 600;
}

.ProseMirror img,
.note-viewer img {
  max-width: 100%;
  height: auto;
  border-radius: 0.375rem;
  margin: 1rem 0;
}

/* Style for placeholders */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

/* Animation for transitions */
.note-transition {
  transition: all 0.3s ease;
}

/* Smooth scrolling */
.smooth-scroll {
  scroll-behavior: smooth;
}

/* Note list animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(5px); }
  to { opacity: 1; transform: translateY(0); }
}

.note-list-item {
  animation: fadeIn 0.3s ease forwards;
}

/* Responsive layout helpers */
.notes-container {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
  height: 100%;
}

@media (min-width: 768px) {
  .notes-container {
    grid-template-columns: minmax(200px, 25%) 1fr;
  }
}

@media (min-width: 1024px) {
  .notes-container {
    grid-template-columns: minmax(250px, 20%) 1fr;
  }
}

/* Sliding panel for mobile */
.mobile-sliding-panel {
  position: fixed;
  top: 0;
  left: 0;
  width: 85%;
  max-width: 320px;
  height: 100%;
  background-color: hsl(var(--background));
  z-index: 50;
  transform: translateX(-100%);
  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  box-shadow: 5px 0 25px rgba(0, 0, 0, 0.1);
  border-right: 1px solid hsl(var(--border));
  display: flex;
  flex-direction: column;
}

.mobile-sliding-panel.open {
  transform: translateX(0);
}

/* Additional styles for note-viewer to ensure formatting is displayed correctly */
/* Apply TipTap content styling to the note viewer component for consistency */
.note-viewer h1 {
  font-size: 1.75rem !important;
  font-weight: 700 !important;
  margin-bottom: 1rem !important;
  margin-top: 1.25rem !important;
  color: hsl(var(--foreground)) !important;
}

.note-viewer h2 {
  font-size: 1.5rem !important;
  font-weight: 600 !important;
  margin-bottom: 0.75rem !important;
  margin-top: 1rem !important;
  color: hsl(var(--foreground)) !important;
}

.note-viewer h3 {
  font-size: 1.25rem !important;
  font-weight: 600 !important;
  margin-bottom: 0.5rem !important;
  margin-top: 0.75rem !important;
  color: hsl(var(--foreground)) !important;
}

.note-viewer ul {
  list-style-type: disc !important;
  padding-left: 1.5rem !important;
  margin-bottom: 0.75rem !important;
}

.note-viewer ol {
  list-style-type: decimal !important;
  padding-left: 1.5rem !important;
  margin-bottom: 0.75rem !important;
}

.note-viewer p {
  margin-bottom: 0.75rem !important;
}

/* Input field styling specific to notes */
.notes-container input:focus,
.DialogContent input:focus,
.MobileSidebar input:focus {
  outline: none;
  box-shadow: none;
  border-color: hsl(var(--border));
}

.notes-container input,
input.border,
.Dialog input,
[class*="dialog"] input {
  border: 1px solid hsl(var(--border)) !important;
}

/* Reset shadcn/ui focus rings */
.ring-offset-background[data-state],
.notes-container [data-state],
.ring-offset-background:focus,
.ring-offset-background:focus-visible,
.ring-offset-background:focus-within {
  --tw-ring-offset-shadow: 0 0 #0000 !important;
  --tw-ring-shadow: 0 0 #0000 !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow, 0 0 #0000) !important;
}